name: Refresh feeds

on:
  schedule:
    - cron: "0 2 * * *"   # 每天 10:00 (UTC+8)
  workflow_dispatch:      # 允许手动触发

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  refresh:
    runs-on: ubuntu-latest

    outputs:
      changed: ${{ steps.commit.outputs.changed }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0           # 拉完整历史，避免 push 被拒

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run collectors
        run: |
          python -m freshfeeds bili timeline --limit 20 --format all --outdir output
          python -m freshfeeds bili rank --category bangumi --limit 20 --format md --outdir output
          python -m freshfeeds steam --limit 8 --format all --outdir output

      # --- 提交到 main（仅当 output 有变化）---
      - name: Prepare commit & pull
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          BRANCH="${GITHUB_REF#refs/heads/}"
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV
          git fetch origin "$BRANCH"
          git pull --rebase origin "$BRANCH" || true

      - name: Commit updated output
        id: commit
        shell: bash
        run: |
          set -e
          git add output/*
          if git diff --cached --quiet; then
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "No changes in output/"
          else
            git commit -m "chore: refresh feeds"
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Push changes
        if: steps.commit.outputs.changed == 'true'
        run: git push origin HEAD:"$BRANCH"

      # --- 为 Pages 生成简单首页（每次都生成；不想生成可删掉这步）---
      - name: Build index.md for Pages
        run: |
          mkdir -p output
          TS=$(date -u +'%Y-%m-%d %H:%M UTC')
          {
            echo "# Fresh Feeds (${TS})"
            echo
            echo "最新生成的文件："
            echo
            for f in $(ls -1 output | sort); do
              echo "- [${f}](./${f})"
            done
            echo
            echo "—— 由 GitHub Actions 自动生成"
          } > output/index.md
          # 禁用 Jekyll 特殊规则，确保所有文件可访问
          echo > output/.nojekyll

      # --- 打包并发 Release（仅当有变化）---
      - name: Build zip artifact
        if: steps.commit.outputs.changed == 'true'
        id: pack
        run: |
          TS=$(date -u +'%Y%m%dT%H%M%SZ')
          echo "TS=$TS" >> $GITHUB_ENV
          ZIP="output_${TS}.zip"
          echo "ZIP=$ZIP" >> $GITHUB_ENV
          zip -r "$ZIP" output
          ls -lh "$ZIP"

      - name: Create GitHub Release
        if: steps.commit.outputs.changed == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name:  "feeds-${{ env.TS }}"
          name:      "Feeds ${{ env.TS }}"
          body: |
            Automated refresh.
            - Bilibili timeline & rank
            - Steam news
          files: ${{ env.ZIP }}

      # --- 上传 Pages 工件（每次都发布；若只想有变化时发布可加 if 条件）---
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: output

  deploy-pages:
    needs: refresh
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deploy
        uses: actions/deploy-pages@v4
