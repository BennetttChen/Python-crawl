name: Refresh feeds

on:
  schedule:
    - cron: "0 2 * * *"
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  refresh:
    runs-on: ubuntu-latest

    outputs:
      changed: ${{ steps.commit.outputs.changed }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run collectors
        run: |
          python -m freshfeeds bili timeline --limit 20 --format all --outdir output
          python -m freshfeeds bili rank --category bangumi --limit 20 --format md --outdir output
          python -m freshfeeds steam --limit 8 --format all --outdir output

      - name: Prepare commit & pull
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          BRANCH="${GITHUB_REF#refs/heads/}"
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV
          git fetch origin "$BRANCH"
          git pull --rebase origin "$BRANCH" || true

      - name: Commit updated output
        id: commit
        shell: bash
        run: |
          set -e
          git add output/* || true
          if git diff --cached --quiet; then
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "No changes in output/"
          else
            git commit -m "chore: refresh feeds"
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Push changes
        if: steps.commit.outputs.changed == 'true'
        run: git push origin HEAD:"$BRANCH"

      - name: Build index.html for Pages
        run: |
          mkdir -p output
          TS=$(date -u +'%Y-%m-%d %H:%M UTC')
          {
            echo '<!doctype html>'
            echo '<meta charset="utf-8">'
            echo '<meta name="viewport" content="width=device-width,initial-scale=1">'
            echo '<title>Fresh Feeds</title>'
            echo '<style>body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial,sans-serif;max-width:900px;margin:40px auto;padding:0 16px;line-height:1.6}h1{margin:0 0 12px}ul{padding-left:20px}li{margin:6px 0}</style>'
            echo '<h1>Fresh Feeds ('"$TS"')</h1>'
            echo '<p>最新一次构建生成的文件：</p>'
            echo '<ul>'
            for f in $(ls -1 output | sort); do
              if [ "$f" != "index.html" ]; then
                echo '<li><a href="./'"$f"'">'"$f"'</a></li>'
              fi
            done
            echo '</ul>'
            echo '<p>— generated by GitHub Actions</p>'
          } > output/index.html
          echo > output/.nojekyll

      - name: Debug: list output tree
        run: |
          echo "== OUTPUT TREE =="
          ls -lahR output || true
          echo "== MUST EXIST =="
          test -f output/index.html && echo "index.html OK" || (echo "index.html MISSING" && exit 1)

      - name: Build zip artifact
        if: steps.commit.outputs.changed == 'true'
        id: pack
        run: |
          TS=$(date -u +'%Y%m%dT%H%M%SZ')
          echo "TS=$TS" >> $GITHUB_ENV
          ZIP="output_${TS}.zip"
          echo "ZIP=$ZIP" >> $GITHUB_ENV
          zip -r "$ZIP" output
          ls -lh "$ZIP"

      - name: Create GitHub Release
        if: steps.commit.outputs.changed == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name:  "feeds-${{ env.TS }}"
          name:      "Feeds ${{ env.TS }}"
          body: "Automated refresh."
          files: ${{ env.ZIP }}

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: output

  deploy-pages:
    needs: refresh
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deploy
        uses: actions/deploy-pages@v4
